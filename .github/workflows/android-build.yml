name: Android APK Build (Stable)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '**.py'
      - '**.kv'
      - 'buildozer.spec'
      - '.github/workflows/**'

env:
  NDK_VERSION: "25c"           # 使用更稳定的 NDK 版本
  ANDROID_API: 31
  MIN_API: 21
  BUILD_TOOLS: "34.0.0"
  PYTHON_VERSION: "3.9"

jobs:
  build-android:
    runs-on: ubuntu-latest
    timeout-minutes: 40

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: '${{ env.PYTHON_VERSION }}'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          wget unzip openjdk-17-jdk \
          autoconf automake libtool \
          libffi-dev libssl-dev git make

    - name: Install Buildozer and dependencies
      run: |
        pip install --upgrade pip setuptools wheel
        pip install --upgrade buildozer
        pip install --upgrade Cython==0.29.36

    - name: Conditional Buildozer Initialization
      run: |
        if [ ! -f "buildozer.spec" ]; then
          buildozer init
          echo "Buildozer initialized successfully"
        else
          echo "buildozer.spec already exists, skipping initialization"
        fi

    - name: Download Android NDK (with enhanced retry and multiple mirrors)
      run: |
        NDK_CACHE_PATH="$HOME/.buildozer/android/packages"
        mkdir -p $NDK_CACHE_PATH
        
        # 尝试多个镜像源
        NDK_URLS=(
          "https://dl.google.com/android/repository/android-ndk-r${{ env.NDK_VERSION }}-linux.zip"
          "https://repo.huaweicloud.com/android/repository/android-ndk-r${{ env.NDK_VERSION }}-linux.zip"
        )
        
        for NDK_URL in "${NDK_URLS[@]}"; do
          echo "Attempting to download from: $NDK_URL"
          if wget --tries=3 --timeout=120 -O "$NDK_CACHE_PATH/ndk.zip" "$NDK_URL"; then
            echo "Download successful!"
            # 验证文件完整性
            if unzip -tq "$NDK_CACHE_PATH/ndk.zip"; then
              echo "ZIP file integrity verified"
              unzip -q "$NDK_CACHE_PATH/ndk.zip" -d "$NDK_CACHE_PATH"
              break
            else
              echo "ZIP file corrupted, trying next mirror..."
              rm -f "$NDK_CACHE_PATH/ndk.zip"
            fi
          else
            echo "Download failed, trying next mirror..."
            rm -f "$NDK_CACHE_PATH/ndk.zip"
          fi
        done
        
        # 最终验证
        if [ ! -d "$NDK_CACHE_PATH/android-ndk-r${{ env.NDK_VERSION }}" ]; then
          echo "Error: All NDK download attempts failed!"
          exit 1
        fi

    - name: Build with Buildozer
      run: |
        export ANDROID_NDK_HOME="$HOME/.buildozer/android/packages/android-ndk-r${{ env.NDK_VERSION }}"
        export PATH="$ANDROID_NDK_HOME:$PATH"
        buildozer -v android debug

    - name: Upload APK artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: bin/*.apk
        retention-days: 7

    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          .buildozer/**/*.log
          *.log
