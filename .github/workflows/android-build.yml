name: Android APK Build (NDK r25b + 16K Alignment)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '**.py'
      - '**.kv'
      - 'buildozer.spec'
      - '.github/workflows/**'

env:
  NDK_VERSION: "25b"
  ANDROID_API: 31
  MIN_API: 21
  BUILD_TOOLS: "34.0.0"
  PYTHON_VERSION: "3.9"

jobs:
  build-android:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: '${{ env.PYTHON_VERSION }}'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          wget unzip openjdk-17-jdk \
          autoconf automake libtool pkg-config \
          autoconf-archive \
          libffi-dev libssl-dev git make p7zip-full curl zlib1g-dev ccache

    - name: Install Buildozer and dependencies
      run: |
        pip install --upgrade pip setuptools wheel
        pip install --upgrade buildozer
        pip install --upgrade Cython==0.29.36

    - name: Setup Android SDK and NDK
      run: |
        mkdir -p ~/.android
        mkdir -p ~/.buildozer/android/platform
        
        echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > ~/.android/android-sdk-license
        echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" >> ~/.android/android-sdk-license

        NDK_URL="https://dl.google.com/android/repository/android-ndk-r25b-linux.zip"
        NDK_DIR="$HOME/.buildozer/android/packages/android-ndk-r25b"
        
        if [ ! -d "$NDK_DIR" ]; then
          echo "Downloading Android NDK r25b..."
          wget -q $NDK_URL -O ndk.zip
          unzip -q ndk.zip -d ~/.buildozer/android/packages/
          rm ndk.zip
          mv ~/.buildozer/android/packages/android-ndk-r25b ~/.buildozer/android/packages/android-ndk-r25b
        fi

        echo "NDK_PATH=$NDK_DIR" >> $GITHUB_ENV
        echo "ANDROID_NDK_HOME=$NDK_DIR" >> $GITHUB_ENV

    - name: Verify and update buildozer.spec
      run: |
        if [ ! -f "buildozer.spec" ]; then
          buildozer init
          echo "Created new buildozer.spec"
        fi

        sed -i "s|android.ndk =.*|android.ndk = ${{ env.NDK_VERSION }}|" buildozer.spec
        sed -i "s|android.ndk_path =.*|android.ndk_path = /home/runner/.buildozer/android/packages/android-ndk-r${{ env.NDK_VERSION }}|" buildozer.spec
        
        if ! grep -q "android.extra_ldflags" buildozer.spec; then
          echo 'android.extra_ldflags = -Wl,-z,max-page-size=16384,-z,common-page-size=16384' >> buildozer.spec
        fi

        if ! grep -q "p4a.branch" buildozer.spec; then
          echo 'p4a.branch = master' >> buildozer.spec
        fi

        echo "Final buildozer.spec settings:"
        grep -E "(android.ndk|android.ndk_path|android.extra_ldflags|p4a.branch)" buildozer.spec

    - name: Build with Buildozer
      run: |
        export ANDROID_NDK_HOME="$HOME/.buildozer/android/packages/android-ndk-r${{ env.NDK_VERSION }}"
        export PATH="$ANDROID_NDK_HOME:$PATH"
        export NDK_PATH="$ANDROID_NDK_HOME"
        
        echo "Using NDK path: $ANDROID_NDK_HOME"
        echo "Building with Buildozer..."
        
        buildozer -v android clean
        buildozer -v android debug 2>&1 | tee build.log

    - name: Verify build output
      run: |
        if ls bin/*.apk 1> /dev/null 2>&1; then
          APK_FILE=$(ls bin/*.apk | head -1)
          echo "Build successful! APK file: $APK_FILE"
          echo "File size: $(du -h "$APK_FILE" | cut -f1)"
          echo "APK info:"
          unzip -l "$APK_FILE" | head -20
        else
          echo "Error: No APK file found in bin/ directory!"
          exit 1
        fi

    - name: Upload APK artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: bin/*.apk
        retention-days: 7

    - name: Upload build logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: build.log
        if-no-files-found: ignore
        retention-days: 7
