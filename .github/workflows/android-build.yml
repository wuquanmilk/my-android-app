name: Android APK Builder (NDK 28c + API 31)

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

env:
  NDK_VERSION: "28c"
  ANDROID_API: 31
  MIN_API: 21
  BUILD_TOOLS: "34.0.0"

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          wget unzip openjdk-17-jdk \
          autoconf automake libtool \
          libffi-dev libssl-dev git make

    - name: Install Buildozer and dependencies
      run: |
        pip install --upgrade pip setuptools wheel
        pip install --upgrade buildozer
        pip install --upgrade Cython==0.29.36

    - name: Conditional Buildozer Initialization
      run: |
        # 只在 buildozer.spec 不存在时初始化
        if [ ! -f "buildozer.spec" ]; then
          echo "Initializing Buildozer..."
          buildozer init
          echo "Buildozer initialized successfully"
        else
          echo "buildozer.spec already exists, skipping initialization"
          # 显示现有配置摘要
          echo "Current buildozer.spec contents:"
          head -20 buildozer.spec || true
        fi

    - name: Download Android NDK (with enhanced retry)
      run: |
        # 设置NDK缓存路径
        NDK_CACHE_PATH="$HOME/.buildozer/android/packages/ndk"
        mkdir -p $NDK_CACHE_PATH
        
        # 使用官方下载地址
        NDK_URL="https://dl.google.com/android/repository/android-ndk-r${{ env.NDK_VERSION }}-linux.zip"
        NDK_ZIP_PATH="$NDK_CACHE_PATH/ndk.zip"
        
        # 增强的重试机制
        for i in {1..5}; do
          echo "Attempt $i to download NDK from $NDK_URL..."
          if wget --tries=3 --timeout=120 -O "$NDK_ZIP_PATH" "$NDK_URL"; then
            echo "NDK downloaded successfully!"
            # 解压NDK
            unzip -q "$NDK_ZIP_PATH" -d "$NDK_CACHE_PATH"
            # 设置环境变量
            echo "ANDROID_NDK_HOME=$NDK_CACHE_PATH/android-ndk-r${{ env.NDK_VERSION }}" >> $GITHUB_ENV
            echo "PATH=$NDK_CACHE_PATH/android-ndk-r${{ env.NDK_VERSION }}:$PATH" >> $GITHUB_ENV
            break
          else
            echo "Download attempt $i failed."
            rm -f "$NDK_ZIP_PATH"
            if [ $i -eq 5 ]; then
              echo "All download attempts failed!"
              exit 1
            fi
            sleep 30
          fi
        done

    - name: Build with Buildozer
      run: |
        # 设置构建环境
        export ANDROID_NDK_HOME="$HOME/.buildozer/android/packages/ndk/android-ndk-r${{ env.NDK_VERSION }}"
        export PATH="$ANDROID_NDK_HOME:$PATH"
        
        # 显示环境信息（用于调试）
        echo "Current working directory: $(pwd)"
        echo "ANDROID_NDK_HOME: $ANDROID_NDK_HOME"
        echo "PATH: $PATH"
        
        # 执行构建
        buildozer -v android debug

    - name: Upload APK artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: bin/*.apk
        retention-days: 7

    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          .buildozer/**/*.log
          *.log
